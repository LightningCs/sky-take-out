<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.OrderMapper">
    <insert id="insert" parameterType="com.sky.entity.Orders" useGeneratedKeys="true" keyProperty="id">
        insert into orders (number, user_id, address_book_id, order_time, checkout_time, amount, remark,
                            phone, address, user_name, consignee, cancel_reason, rejection_reason, cancel_time,
                            estimated_delivery_time, delivery_time, pack_amount, tableware_number)
        values (#{number}, #{userId}, #{addressBookId}, #{orderTime}, #{checkoutTime}, #{amount}, #{remark},
                #{phone}, #{address}, #{userName}, #{consignee}, #{cancelReason}, #{rejectionReason}, #{cancelTime},
                #{estimatedDeliveryTime}, #{deliveryTime}, #{packAmount}, #{tablewareNumber})
    </insert>

    <update id="update" parameterType="com.sky.entity.Orders">
        update orders
        <set>
            <if test="cancelReason != null and cancelReason!='' ">
                cancel_reason=#{cancelReason},
            </if>
            <if test="rejectionReason != null and rejectionReason!='' ">
                rejection_reason=#{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time=#{cancelTime},
            </if>
            <if test="payStatus != null">
                pay_status=#{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method=#{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time=#{checkoutTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime}
            </if>
        </set>
        where id = #{id}
    </update>
    <select id="searchOrders" resultType="com.sky.entity.Orders"
            parameterType="com.sky.dto.OrdersPageQueryDTO">
        select * from orders
        <where>
            <if test="number != null">
                and number = #{number}
            </if>
            <if test="phone != null">
                and phone = #{phone}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="beginTime != null">
                and order_time >= #{beginTime}
            </if>
            <if test="endTime != null">
                and #{endTime} >= delivery_time
            </if>
        </where>
    </select>
    <select id="getByStatus" resultType="com.sky.vo.OrderVO">
        select * from orders
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>
    <select id="getTurnoversByDates" resultType="java.lang.Double"
            parameterType="java.util.List">
        select ifnull(sum(amount), 0) as 'turnover'
        from (
            <foreach collection="dateList" item="date" separator=" " close="select null as order_time">
                select #{date} as `order_time`
                UNION ALL
            </foreach>
             ) as t1 left join orders t2
        on t1.order_time = DATE(t2.order_time) and t2.status = 5
        where t1.order_time != 'null'
        group by t1.order_time
        order by t1.order_time
    </select>
    <select id="getOrderEverydayCount" resultType="java.lang.Integer">
        select if(t2.order_time is null, 0, count(t2.id)) as `count` from (
        <foreach collection="dateList" item="date" separator=" " close="select null as time">
            select #{date} as `time`
            union all
        </foreach>
        ) t1 left join orders t2 on DATE(t2.order_time) = t1.time
        <if test="status.length > 0">
            and t2.status = #{status[0]}
        </if>
        where t1.time != 'null'
        group by t1.time
        order by t1.time
    </select>
    <select id="countByMap" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(id) from orders
        <where>
            <if test="begin != null">
                and order_time >= #{begin}
            </if>
            <if test="end != null">
                and order_time &lt;= #{end}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>
</mapper>
